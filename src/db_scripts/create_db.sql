/* Data from Yahoo

We can get this from the yahoo fantasy API, through the yfpy package or something else 
https://yfpy.uberfastman.com/

*/

--We could potentially use the yfpy endpoint get_league_players() for this 
CREATE TABLE IF NOT EXISTS YAHOO_PLAYER_TABLE (
    YAHOO_PLAYER_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,YAHOO_PLAYER_NAME string NOT NULL
    ,IS_ACTIVE boolean NOT NULL
    ,IS_INJURED boolean NOT NULL
    ,UPDATE_DATE date NOT NULL
);

--I think we can also get this info from  get_league_players()?
CREATE TABLE IF NOT EXISTS YAHOO_PLAYER_POSITION_ELIGIBILITY_TABLE (
    PLAYER_POSITION_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,YAHOO_PLAYER_ID int NOT NULL FOREIGN KEY REFERENCES YAHOO_PLAYER_TABLE(YAHOO_PLAYER_ID)
    ,POSITION string NOT NULL
    ,ELIGIBLE boolean NOT NULL
    ,UPDATE_DATE date NOT NULL
);

/* DARKO data

This is tricky, because there is no download button on the DARKO website. We might need to scrape it 

Useful info is at https://apanalytics.shinyapps.io/DARKO/, on the 'Current Player Skill Projections'
and 'Daily Player Per-Game Projections'

*/

CREATE TABLE IF NOT EXISTS DARKO_PLAYER_TABLE (
    DARKO_PLAYER_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,DARKO_PLAYER_NAME string NOT NULL 
    ,FIELD_GOAL_ATTEMPTS int NOT NULL 
    ,FIELD_GOALS_MADE int NOT NULL 
    ,FREE_THROW_ATTEMPTS int NOT NULL 
    ,FREE_THROWS_MADE int NOT NULL 
    ,THREES int NOT NULL 
    ,POINTS int NOT NULL 
    ,REBOUNDS int NOT NULL 
    ,ASSISTS int NOT NULL 
    ,STEALS int NOT NULL 
    ,BLOCKS int NOT NULL 
    ,TURNOVERS int NOT NULL 
    ,MINUTES_PLAYED Decimal(6,2) NOT NULL 
    ,UPDATE_DATE date NOT NULL
);

/* NBA data

We can use the NBA's own API for this. It's not too bad 

*/
CREATE TABLE IF NOT EXISTS NBA_PLAYER_TABLE (
    NBA_PLAYER_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,NBA_PLAYER_NAME string NOT NULL 
    ,UPDATE_DATE date NOT NULL
);

CREATE OR REPLACE TABLE NBA_SEASON_TABLE (
    SEASON_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,SEASON string
    ,UPDATE_DATE date NOT NULL
);

CREATE OR REPLACE TABLE NBA_TEAM_TABLE (
    TEAM_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,TEAM_NAME string NOT NULL
    ,UPDATE_DATE date NOT NULL
);

CREATE OR REPLACE TABLE NBA_GAME_TABLE (
    GAME_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,SEASON_ID int NOT NULL FOREIGN KEY REFERENCES NBA_SEASON_TABLE(SEASON_ID)
    ,HOME_TEAM_ID int NOT NULL FOREIGN KEY REFERENCES NBA_TEAM_TABLE(TEAM_ID)
    ,AWAY_TEAM_ID int NOT NULL FOREIGN KEY REFERENCES NBA_TEAM_TABLE(TEAM_ID)
    ,GAME_DATE date NOT NULL
    ,UPDATE_DATE date NOT NULL
);

--We can use BoxScoreTraditionalV2 for this 
CREATE TABLE IF NOT EXISTS BOX_SCORE_TABLE (
    BOX_SCORE_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,GAME_ID int NOT NULL FOREIGN KEY REFERENCES NBA_GAME_TABLE(GAME_ID)
    ,NBA_PLAYER_ID int NOT NULL FOREIGN KEY REFERENCES NBA_PLAYER_TABLE(NBA_PLAYER_ID)
    ,FIELD_GOAL_ATTEMPTS int NOT NULL 
    ,FIELD_GOALS_MADE int NOT NULL 
    ,FREE_THROW_ATTEMPTS int NOT NULL 
    ,FREE_THROWS_MADE int NOT NULL 
    ,THREES int NOT NULL 
    ,POINTS int NOT NULL 
    ,REBOUNDS int NOT NULL 
    ,ASSISTS int NOT NULL 
    ,STEALS int NOT NULL 
    ,BLOCKS int NOT NULL 
    ,TURNOVERS int NOT NULL 
    ,MINUTES_PLAYED Decimal(6,2) NOT NULL 
    ,UPDATE_DATE date NOT NULL
);

CREATE TABLE IF NOT EXISTS PLAYER_REFERENCE_TABLE (
    MASTER_PLAYER_ID int NOT NULL PRIMARY KEY AUTOINCREMENT
    ,YAHOO_PLAYER_ID int NOT NULL FOREIGN KEY REFERENCES YAHOO_PLAYER_TABLE(YAHOO_PLAYER_ID)
    ,NBA_PLAYER_ID int NOT NULL FOREIGN KEY REFERENCES NBA_PLAYER_TABLE(NBA_PLAYER_ID)
    ,DARKO_PLAYER_ID int NOT NULL FOREIGN KEY REFERENCES DARKO_PLAYER_TABLE(DARKO_PLAYER_ID)
);